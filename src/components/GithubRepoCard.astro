---
import type { GHRepo } from '../types/github'

interface Props {
  data: GHRepo
}

const { data } = Astro.props
---

<github-repo-card data-repourl={data.url}>
  <div
    class="flex flex-col h-40 justify-between cursor-pointer bg-white text-gray-500 p-6 shadow-md hover:shadow-lg transition-shadow duration-300 ease-in"
  >
    <div class="flex flex-col">
      <div class="flex items-center mb-1 gap-1 text-gray-800 text-2xl font-medium">
        <div class="i-codicon-repo"></div>
        <p class="whitespace-nowrap text-ellipsis overflow-hidden">
          {data.name}
        </p>
      </div>
      <p class="line-clamp-2 overflow-hidden">{data.description}</p>
    </div>
    <div class="flex justify-between text-xs text-200">
      <div class="flex flex-grow gap-2">
        {
          data.primaryLanguage !== null && (
            <span class="flex items-center gap-1">
              <div class="w-3 h-3 rounded-full" style={{ backgroundColor: data.primaryLanguage.color }} />
              <p>{data.primaryLanguage.name}</p>
            </span>
          )
        }
        <span class="flex items-center gap-0.5">
          <i class="i-codicon-repo-forked"></i>
          <p>{data.forkCount}</p>
        </span>
        <span class="flex items-center gap-0.5">
          <i class="i-codicon-star-full"></i>
          <p>{data.stargazers.totalCount}</p>
        </span>
      </div>
      <div>
        <p>{data.diskUsage}</p>
      </div>
    </div>
  </div>
</github-repo-card>

<script>
  class GithubRepoCard extends HTMLElement {
    constructor() {
      super()

      const repoUrl = this.dataset.repourl
      this.addEventListener('click', () => {
        const win = window.open(repoUrl, '_blank')
        win!.focus()
      })
    }
  }

  customElements.define('github-repo-card', GithubRepoCard)
</script>
